apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      # Add securityContext to ensure write permissions for the volume
      securityContext:
        runAsUser: 1001 # Confluent Kafka images often run as non-root user 1001
        fsGroup: 1001   # Ensure the group has write access to the volume
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:7.6.0
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              # Ensure zookeeper service is running and named 'zookeeper'
              value: "zookeeper:2181" # Correct Zookeeper service address
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT # Removed CONTROLLER mapping
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://0.0.0.0:9092 # Listen on all interfaces inside the pod
            - name: KAFKA_ADVERTISED_LISTENERS
              # Ensure kafka service is named 'kafka' and accessible within the cluster
              value: PLAINTEXT://kafka:9092 # Address clients should use to connect
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: PLAINTEXT # Listener name for broker-to-broker communication
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1" # Suitable for single-node setup
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1" # Suitable for single-node setup
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1" # Suitable for single-node setup
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true" # Set to "false" for production control
            - name: KAFKA_HEAP_OPTS
              value: "-Xms512m -Xmx1g" # Adjust JVM heap size as needed
            - name: KAFKA_LOG_DIRS
              value: "/var/lib/kafka/data/logs" # Point log directory to the volume mount
          # Add resource requests and limits
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "2000m"
              memory: "2Gi"
          # Add liveness probe with increased initial delay
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 60
            periodSeconds: 15
            failureThreshold: 5
          # Add readiness probe with increased initial delay
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 60
            periodSeconds: 15
            failureThreshold: 5
          # Add volume mount for persistent data
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data # Mount point inside the container
      # Add volume definition using the PVC
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-pvc # Ensure this matches the PVC metadata.name