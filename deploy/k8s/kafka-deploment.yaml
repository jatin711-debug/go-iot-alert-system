apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
        - name: clean-meta-properties
          image: busybox
          command: ["sh", "-c", "rm -f /bitnami/kafka/data/meta.properties"]
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka/data
      containers:
        - name: kafka
          image: bitnami/kafka:3.7.0
          ports:
            - containerPort: 9092
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KAFKA_CFG_BROKER_ID
              value: "1"
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://:9092
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: PLAINTEXT://$(POD_IP):9092
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_HEAP_OPTS
              value: "-Xms512m -Xmx1g"
            - name: KAFKA_CFG_LOG_DIRS
              value: "/bitnami/kafka/data"
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka/data
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 90
            periodSeconds: 15
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 90
            periodSeconds: 15
            failureThreshold: 5
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-pvc
